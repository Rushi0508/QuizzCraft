//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuizzCraftClient.QuizServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Quiz", Namespace="http://schemas.datacontract.org/2004/07/QuizzCraftService.Models")]
    [System.SerializableAttribute()]
    public partial class Quiz : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttendeesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfQuestionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuizIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TeacherIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Attendees {
            get {
                return this.AttendeesField;
            }
            set {
                if ((this.AttendeesField.Equals(value) != true)) {
                    this.AttendeesField = value;
                    this.RaisePropertyChanged("Attendees");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedAt {
            get {
                return this.CreatedAtField;
            }
            set {
                if ((this.CreatedAtField.Equals(value) != true)) {
                    this.CreatedAtField = value;
                    this.RaisePropertyChanged("CreatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfQuestions {
            get {
                return this.NumberOfQuestionsField;
            }
            set {
                if ((this.NumberOfQuestionsField.Equals(value) != true)) {
                    this.NumberOfQuestionsField = value;
                    this.RaisePropertyChanged("NumberOfQuestions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuizId {
            get {
                return this.QuizIdField;
            }
            set {
                if ((this.QuizIdField.Equals(value) != true)) {
                    this.QuizIdField = value;
                    this.RaisePropertyChanged("QuizId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TeacherId {
            get {
                return this.TeacherIdField;
            }
            set {
                if ((this.TeacherIdField.Equals(value) != true)) {
                    this.TeacherIdField = value;
                    this.RaisePropertyChanged("TeacherId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="QuizServiceReference.IQuizService")]
    public interface IQuizService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/AddQuiz", ReplyAction="http://tempuri.org/IQuizService/AddQuizResponse")]
        string AddQuiz(QuizzCraftClient.QuizServiceReference.Quiz quiz, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/AddQuiz", ReplyAction="http://tempuri.org/IQuizService/AddQuizResponse")]
        System.Threading.Tasks.Task<string> AddQuizAsync(QuizzCraftClient.QuizServiceReference.Quiz quiz, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/DeleteQuiz", ReplyAction="http://tempuri.org/IQuizService/DeleteQuizResponse")]
        void DeleteQuiz(int quizId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/DeleteQuiz", ReplyAction="http://tempuri.org/IQuizService/DeleteQuizResponse")]
        System.Threading.Tasks.Task DeleteQuizAsync(int quizId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/GetAllQuizzes", ReplyAction="http://tempuri.org/IQuizService/GetAllQuizzesResponse")]
        QuizzCraftClient.QuizServiceReference.Quiz[] GetAllQuizzes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/GetAllQuizzes", ReplyAction="http://tempuri.org/IQuizService/GetAllQuizzesResponse")]
        System.Threading.Tasks.Task<QuizzCraftClient.QuizServiceReference.Quiz[]> GetAllQuizzesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/GetMyQuizzes", ReplyAction="http://tempuri.org/IQuizService/GetMyQuizzesResponse")]
        QuizzCraftClient.QuizServiceReference.Quiz[] GetMyQuizzes(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/GetMyQuizzes", ReplyAction="http://tempuri.org/IQuizService/GetMyQuizzesResponse")]
        System.Threading.Tasks.Task<QuizzCraftClient.QuizServiceReference.Quiz[]> GetMyQuizzesAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/GetQuiz", ReplyAction="http://tempuri.org/IQuizService/GetQuizResponse")]
        QuizzCraftClient.QuizServiceReference.Quiz GetQuiz(int quizId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/GetQuiz", ReplyAction="http://tempuri.org/IQuizService/GetQuizResponse")]
        System.Threading.Tasks.Task<QuizzCraftClient.QuizServiceReference.Quiz> GetQuizAsync(int quizId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/UpdateQuiz", ReplyAction="http://tempuri.org/IQuizService/UpdateQuizResponse")]
        string UpdateQuiz(QuizzCraftClient.QuizServiceReference.Quiz quiz);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/UpdateQuiz", ReplyAction="http://tempuri.org/IQuizService/UpdateQuizResponse")]
        System.Threading.Tasks.Task<string> UpdateQuizAsync(QuizzCraftClient.QuizServiceReference.Quiz quiz);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IQuizServiceChannel : QuizzCraftClient.QuizServiceReference.IQuizService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QuizServiceClient : System.ServiceModel.ClientBase<QuizzCraftClient.QuizServiceReference.IQuizService>, QuizzCraftClient.QuizServiceReference.IQuizService {
        
        public QuizServiceClient() {
        }
        
        public QuizServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QuizServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuizServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuizServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AddQuiz(QuizzCraftClient.QuizServiceReference.Quiz quiz, string email) {
            return base.Channel.AddQuiz(quiz, email);
        }
        
        public System.Threading.Tasks.Task<string> AddQuizAsync(QuizzCraftClient.QuizServiceReference.Quiz quiz, string email) {
            return base.Channel.AddQuizAsync(quiz, email);
        }
        
        public void DeleteQuiz(int quizId) {
            base.Channel.DeleteQuiz(quizId);
        }
        
        public System.Threading.Tasks.Task DeleteQuizAsync(int quizId) {
            return base.Channel.DeleteQuizAsync(quizId);
        }
        
        public QuizzCraftClient.QuizServiceReference.Quiz[] GetAllQuizzes() {
            return base.Channel.GetAllQuizzes();
        }
        
        public System.Threading.Tasks.Task<QuizzCraftClient.QuizServiceReference.Quiz[]> GetAllQuizzesAsync() {
            return base.Channel.GetAllQuizzesAsync();
        }
        
        public QuizzCraftClient.QuizServiceReference.Quiz[] GetMyQuizzes(string email) {
            return base.Channel.GetMyQuizzes(email);
        }
        
        public System.Threading.Tasks.Task<QuizzCraftClient.QuizServiceReference.Quiz[]> GetMyQuizzesAsync(string email) {
            return base.Channel.GetMyQuizzesAsync(email);
        }
        
        public QuizzCraftClient.QuizServiceReference.Quiz GetQuiz(int quizId) {
            return base.Channel.GetQuiz(quizId);
        }
        
        public System.Threading.Tasks.Task<QuizzCraftClient.QuizServiceReference.Quiz> GetQuizAsync(int quizId) {
            return base.Channel.GetQuizAsync(quizId);
        }
        
        public string UpdateQuiz(QuizzCraftClient.QuizServiceReference.Quiz quiz) {
            return base.Channel.UpdateQuiz(quiz);
        }
        
        public System.Threading.Tasks.Task<string> UpdateQuizAsync(QuizzCraftClient.QuizServiceReference.Quiz quiz) {
            return base.Channel.UpdateQuizAsync(quiz);
        }
    }
}
